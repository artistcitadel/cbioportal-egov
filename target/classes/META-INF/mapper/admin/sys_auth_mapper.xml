<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC  
 "-//mybatis.org//DTD Mapper 3.0//EN"  
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
 
 
 <mapper namespace="auth">
 
 	<!-- 권한목록 -->
	<select id="selectAutinxList" resultType="hashmap">
		SELECT 	 A.AUT_CODE       /* 권한코드 */
				,A.AUT_NAME      /* 권한명 */
				,A.CRT_DT 	     /* 수정일자 */
				,A.CRT_ID 	     /* 생성자 ID */
				,A.UDT_DT 	     /* 변경일자 */
				,A.UDT_ID 	     /* 변경자 ID */
		FROM	CC_AUTINX A
		WHERE	1=1
	</select>
	
	<!-- 권한-사용자 매핑목록 -->
	<select id="selectPerAuthList" parameterType="map" resultType="hashmap">
		SELECT   A.AUT_CODE					/* 권한코드 */
				,A.AUT_NAME        			/* 권한명 */
				,B.PER_CODE        			/* 사용자코드 */
				,C.PER_NAME        			/* 사용자명 */
				,B.INSTCD
		FROM	CC_AUTINX A , 
				CC_PER_AUTH B, 
				CC_PERINX C
		WHERE	1=1
		AND 	A.AUT_CODE = B.AUT_CODE
		AND 	B.PER_CODE = C.PER_CODE
		AND		B.INSTCD = C.INSTCD
		<if test="SEARCH_AUT_CODE != null and SEARCH_AUT_CODE != ''">
		AND 	A.AUT_CODE = #{SEARCH_AUT_CODE}	
		</if>
		
		<if test="SEARCH_PER_CODE != null and SEARCH_PER_CODE != ''">
		AND 	B.PER_CODE = #{SEARCH_PER_CODE}	
		</if>
		
	</select>
	
	<!-- 권한정보 신규등록 -->
	<insert id="insertAutinx" parameterType="map">
		INSERT INTO CC_AUTINX
		VALUES
		(
			
			 #{AUT_CODE}
			,#{AUT_NAME}
			,NOW()
			,#{CRT_ID}
			,NOW()
			,#{UDT_ID}
		)
				
	
	</insert>
	<update id="updateAutinx" parameterType="map">
		UPDATE   CC_AUTINX
		SET		 AUT_NAME=#{AUT_NAME}
				,UDT_DT=NOW()
				,UDT_ID=#{UDT_ID}
		WHERE	1=1
		AND 	AUT_CODE=#{AUT_CODE}
	
	</update>
	
	<update id="deleteAutinx" parameterType="map">
		DELETE FROM   CC_AUTINX
		WHERE	1=1
		AND 	AUT_CODE=#{AUT_CODE}
	
	</update>
	
	
	<insert id="insertPerAuth" parameterType="Map">
		INSERT INTO CC_PER_AUTH
		(
			PER_CODE
			,AUT_CODE
			,INSTCD
			,CRT_DT
			,CRT_ID
			,UDT_DT
			,UDT_ID
		)
		VALUES
		(
			#{PER_CODE}
			,#{AUT_CODE}
			,#{INSTCD}
			,NOW()
			,#{CRT_ID}	
			,NOW()	
			,#{UDT_ID}	
			
		)
	
	
	</insert>
	<delete id="deletePerAuth" parameterType="map">
		DELETE 	FROM CC_PER_AUTH
		WHERE	1=1
		AND 	AUT_CODE=#{AUT_CODE}
		
		<if test="PER_CODE != null and PER_CODE != ''">
		AND PER_CODE=#{PER_CODE}
		</if>
		
		
		<if test="INSTCD != null and INSTCD != ''">
		AND INSTCD=#{INSTCD}
		</if>
	
	</delete>
	<select id="selectMenuAuthList" parameterType="map" resultType="hashmap">
		SELECT 	 TB1.SEQ
				,TB1.UPPER_SEQ
				,TB1.MENU_GBN_CD
				,TB2.COMM_CD_NM AS MENU_GBN_NM
				,TB1.MENU_NM
				,TB1.MENU_URL
				,TB1.UPPER_MENU_URL
				,TB1.SORT
				,TB1.CHKVAL
				,TB1.CRT_DT
		FROM
		(
			<if test="SEARCH_AUT_CODE == '' or SEARCH_AUT_CODE == null">
				SELECT  A.SEQ
						,A.UPPER_SEQ
						,A.MENU_GBN_CD
						,A.MENU_NM
						,A.MENU_URL
						,(SELECT MENU_URL FROM CC_MENU C WHERE C.UPPER_SEQ=A.SEQ LIMIT 1) AS UPPER_MENU_URL
						,A.SORT
						,0 AS CHKVAL
						,A.CRT_DT
				FROM	CC_MENU A
				WHERE	1=1
				AND A.USE_YN='Y'
			</if>
			
			
			<if test="SEARCH_AUT_CODE != '' and SEARCH_AUT_CODE != null">
				SELECT   A.SEQ
						,A.UPPER_SEQ
						,A.MENU_GBN_CD
						,A.MENU_NM
						,A.MENU_URL
						,(SELECT MENU_URL FROM CC_MENU C WHERE C.UPPER_SEQ=A.SEQ LIMIT 1) AS UPPER_MENU_URL
						,A.SORT
						,1 AS CHKVAL
						,A.CRT_DT
				FROM	CC_MENU A
				WHERE	1=1
				AND 	SEQ IN (
						SELECT  MENU_SEQ
						FROM	CC_MENU_AUTH
						WHERE	1=1
						AND 	AUT_CODE IN (${SEARCH_AUT_CODE})	
						ORDER BY AUT_CODE,MENU_SEQ
				)
				AND A.USE_YN='Y'
				UNION ALL
				SELECT  A.SEQ
						,A.UPPER_SEQ
						,A.MENU_GBN_CD
						,A.MENU_NM
						,A.MENU_URL
						,(SELECT MENU_URL FROM CC_MENU C WHERE C.UPPER_SEQ=A.SEQ LIMIT 1) AS UPPER_MENU_URL
						,A.SORT
						,0 AS CHKVAL
						,A.CRT_DT
				FROM	CC_MENU A
				WHERE	1=1
				AND 	SEQ NOT IN (
						SELECT  MENU_SEQ
						FROM	CC_MENU_AUTH
						WHERE	1=1
						AND 	AUT_CODE IN (${SEARCH_AUT_CODE})	
						ORDER BY AUT_CODE,MENU_SEQ
				)
				AND A.USE_YN='Y'
			</if>
			
			
			
		)TB1 
		LEFT OUTER JOIN CC_COMMON_CODE TB2 ON (TB2.COMM_GRP_SEQ=1 AND TB2.COMM_CD_ID=TB1.MENU_GBN_CD)  
		ORDER BY TB1.MENU_GBN_CD,TB1.SEQ,TB1.UPPER_SEQ,TB1.SORT ASC
	
	</select>
	
	
	<select id="selectReportMenuAuthList" parameterType="map" resultType="hashmap">
		SELECT
			A.SEQ,
			A.CATE_CODE,
			A.URL,
			A.USER_ID,
			A.TARGET_ID 
		FROM CC_REPORT_PAGE A
		INNER JOIN CC_REPORT_CATE B
		ON A.CATE_CODE = B.SEQ
		WHERE	1=1
			AND A.SHOW_YN = 'Y'
			<choose>
				<when test="SEARCH_AUT_CODE2 == 'ADMIN'">
				</when>
				<otherwise>
					<choose>
						<when test="SEARCH_AUT_CODE == '' or SEARCH_AUT_CODE == null">
							AND A.AUT_CODE = 'ALL'
						</when>
						<otherwise>
							AND ( A.AUT_CODE IN (${SEARCH_AUT_CODE}) OR A.AUT_CODE = 'ALL' )     
						</otherwise>
					</choose>
				</otherwise>
			</choose>
		ORDER BY B.`ORDER`,A.`ORDER` ASC
	</select>
	
	<insert id="insertMenuAuth" parameterType="map">
	INSERT 	INTO CC_MENU_AUTH 
	(
		MENU_SEQ,AUT_CODE,CRT_DT,CRT_ID,UDT_DT,UDT_ID
	) 
	VALUES 
	(
		 #{MENU_SEQ} 
		,#{AUT_CODE}
		,NOW() 
		,#{CRT_ID}
		,NOW()
		,#{UDT_ID}
	)
	
	
	
	</insert>
	
	<delete id="deleteMenuAuth" parameterType="map">
		DELETE FROM CC_MENU_AUTH WHERE AUT_CODE=#{AUT_CODE}
	</delete>


</mapper>
 
 
 